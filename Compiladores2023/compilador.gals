#Options
GenerateScanner = true
GenerateParser = false
Language = Java
ScannerName = Lexico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = String
#RegularDefinitions

	prefixo: _i | _f | _b | _s
	
	semEsqd: [0-9] | [1-9][0-9]*

	exceção: [ifsb]

	linha: # (.)*
	
	bloco: "[" ([^ "[" "]" ])* "]"
#Tokens
reservada:[a-z][a-z]*

//identificador

id: {prefixo} [A-Z](([a-z] | [0-9])+ [A-Z]?)* | {prefixo} [a-z] ((([A-Z]? ([a-z] | [0-9])+ )*[A-Z]? | (([a-z] | [0-9])+ [A-Z]?)*))?

//contante_int

int: {semEsqd}

//contante_float

float: {semEsqd} ("." ([0-9]*[1-9] | 0 ))

//constante_string

string: \" ([^\n \" \\ %]¨| % {exceção})* \"

//relação de palavras reservadas
// do else false fun if in main out repeat true while

do = reservada: "do"
else = reservada: "else"
false = reservada: "false"
fun = reservada: "fun"
if = reservada: "if"
in = reservada: "in"
main = reservada: "main"
out = reservada: "out"
repeat = reservada: "repeat"
true = reservada: "true"
while = reservada: "while"


//relação de simbolos especias
//& | ! , ; = : ( ) { }  == != < > + - * /

"&"
"|"
"!"
","
";" 
"=" 
":"
"(" 
")" 
"{"
"}"  
"==" 
"!=" 
"<" 
">" 
"+" 
"-" 
"*" 
"/"

//reconhecer e ignorar caracteres de formatação

:[\s\t\n\r]

//reconhecer e ignorar comentario de linha e bloco

:!{linha}

:!{bloco}
